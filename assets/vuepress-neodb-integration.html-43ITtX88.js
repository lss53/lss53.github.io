import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as r,o as n}from"./app-CIJU17ei.js";const s={};function a(i,e){return n(),t("div",null,[...e[0]||(e[0]=[r(`<p>本文档旨在简要介绍如何将 <a href="https://neodb.social/" target="_blank" rel="noopener noreferrer">NeoDB</a> 的数据集成到您的 VuePress 站点，从而创建一个动态更新的观影、阅读或听音乐记录页面。</p><h2 id="步骤一-获取-neodb-api-密钥-token" tabindex="-1"><a class="header-anchor" href="#步骤一-获取-neodb-api-密钥-token"><span>步骤一：获取 NeoDB API 密钥 (Token)</span></a></h2><ol><li>使用您的 Mastodon 账号登录 <a href="https://neodb.social/" target="_blank" rel="noopener noreferrer">NeoDB 官网</a>。</li><li>导航至 <code>头像</code> → <code>设置</code> → <code>更多设置</code> → <code>查看已授权的应用程序</code>。</li><li>点击 <code>+ Create Personal Token</code> 按钮，创建一个新的个人访问令牌。</li><li><strong>请务必复制并妥善保管生成的 Token</strong>，它将用于后续的 API 请求。</li></ol><h2 id="步骤二-部署-api-代理服务" tabindex="-1"><a class="header-anchor" href="#步骤二-部署-api-代理服务"><span>步骤二：部署 API 代理服务</span></a></h2><p>为了安全地在前端调用 NeoDB API 并避免跨域问题，推荐部署一个简单的代理服务。您可以使用开源项目 <a href="https://github.com/Lyunvy/neodb-shelf-api" target="_blank" rel="noopener noreferrer">neodb-shelf-api</a>，并将其免费部署在 Vercel 等平台上。</p><p>部署过程通常包括：</p><ol><li>Fork 该项目到您的 GitHub 账户。</li><li>在 Vercel 上关联您的 GitHub 仓库并进行部署。</li><li>在 Vercel 项目的环境变量中设置您在步骤一中获取的 NeoDB Token。</li></ol><p>部署成功后，您将获得一个公开的 API 接口地址。</p><h2 id="步骤三-在-vuepress-中引用和展示数据" tabindex="-1"><a class="header-anchor" href="#步骤三-在-vuepress-中引用和展示数据"><span>步骤三：在 VuePress 中引用和展示数据</span></a></h2><p>您需要在 VuePress 页面中编写一个 Vue 组件，通过该组件向您部署的 API 代理服务发起请求，获取数据并渲染到页面上。</p><ol><li><p><strong>创建 Vue 组件</strong>:<br> 在您的 VuePress 项目的 <code>.vuepress/components</code> 目录下创建一个新的组件，例如 <code>NeoDBWall.vue</code>。这个组件将负责获取数据和展示。</p></li><li><p><strong>获取和渲染数据</strong>:<br> 在组件内部，您可以使用 <code>axios</code> 或 <code>fetch</code> API，在 <code>onMounted</code> 生命周期钩子中请求您的 API 代理接口，并将返回的数据绑定到模板中进行循环渲染。</p></li><li><p><strong>样式美化</strong>:<br> 为您的组件编写 CSS 样式，以卡片墙或其他美观的形式展示您的收藏记录。</p></li><li><p><strong>在 Markdown 中使用组件</strong>:<br> 在您希望展示观影/阅读记录的 Markdown 页面中，直接使用您创建的组件即可。</p><div class="language-markdown line-numbers-mode" data-highlighter="shiki" data-ext="markdown" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-markdown"><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"># 我的观影记录</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;NeoDBWall /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="hint-container info"><p class="hint-container-title">进阶配置</p><p>为了方便在项目内引用组件或静态资源，您可以配置 VuePress 的 <code>alias</code>（路径别名）。例如，在 <code>.vuepress/config.ts</code> 中设置别名，可以简化组件的导入路径。</p><p>参考：<a href="https://github.com/vuepress-theme-hope/vuepress-theme-hope/blob/main/docs/theme/src/.vuepress/config.ts" target="_blank" rel="noopener noreferrer">VuePress Theme Hope - config.ts 示例</a></p></div>`,12)])])}const c=o(s,[["render",a]]),d=JSON.parse('{"path":"/dev/website/vuepress-neodb-integration.html","title":"在 VuePress 站点中集成 NeoDB API 构建观影/阅读页面","lang":"zh-CN","frontmatter":{"title":"在 VuePress 站点中集成 NeoDB API 构建观影/阅读页面","shortTitle":"VuePress 集成 NeoDB","date":"2025-01-02T00:00:00.000Z","icon":"fas fa-film","order":6,"category":["网站搭建"],"tag":["VuePress","NeoDB","API","个人网站","博客"],"description":"学习如何在你的 VuePress 站点中通过 NeoDB 的 API 获取并展示你的电影、图书和音乐收藏列表，创建个性化的观影/阅读页面。","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"在 VuePress 站点中集成 NeoDB API 构建观影/阅读页面\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-02T00:00:00.000Z\\",\\"dateModified\\":\\"2025-09-13T03:18:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"诗往哥\\",\\"url\\":\\"/intro.html\\"}]}"],["meta",{"property":"og:url","content":"https:////211777.xyz/dev/website/vuepress-neodb-integration.html"}],["meta",{"property":"og:site_name","content":"诗往哥的博客"}],["meta",{"property":"og:title","content":"在 VuePress 站点中集成 NeoDB API 构建观影/阅读页面"}],["meta",{"property":"og:description","content":"学习如何在你的 VuePress 站点中通过 NeoDB 的 API 获取并展示你的电影、图书和音乐收藏列表，创建个性化的观影/阅读页面。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-09-13T03:18:03.000Z"}],["meta",{"property":"article:tag","content":"博客"}],["meta",{"property":"article:tag","content":"个人网站"}],["meta",{"property":"article:tag","content":"API"}],["meta",{"property":"article:tag","content":"NeoDB"}],["meta",{"property":"article:tag","content":"VuePress"}],["meta",{"property":"article:published_time","content":"2025-01-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-13T03:18:03.000Z"}]]},"git":{"createdTime":1757683261000,"updatedTime":1757733483000,"contributors":[{"name":"lss53","username":"lss53","email":"2720626504@qq.com","commits":3,"url":"https://github.com/lss53"}]},"readingTime":{"minutes":2.32,"words":696},"filePathRelative":"dev/website/vuepress-neodb-integration.md","excerpt":"<p>本文档旨在简要介绍如何将 <a href=\\"https://neodb.social/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">NeoDB</a> 的数据集成到您的 VuePress 站点，从而创建一个动态更新的观影、阅读或听音乐记录页面。</p>\\n<h2>步骤一：获取 NeoDB API 密钥 (Token)</h2>\\n<ol>\\n<li>使用您的 Mastodon 账号登录 <a href=\\"https://neodb.social/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">NeoDB 官网</a>。</li>\\n<li>导航至 <code>头像</code> → <code>设置</code> → <code>更多设置</code> → <code>查看已授权的应用程序</code>。</li>\\n<li>点击 <code>+ Create Personal Token</code> 按钮，创建一个新的个人访问令牌。</li>\\n<li><strong>请务必复制并妥善保管生成的 Token</strong>，它将用于后续的 API 请求。</li>\\n</ol>"}');export{c as comp,d as data};
